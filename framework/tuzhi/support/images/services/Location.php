<?php
/**
 * Created by PhpStorm.
 * User: 吾色禅师<wuse@chanshi.me>
 * Date: 2016/12/1
 * Time: 23:26
 */

namespace tuzhi\support\images\services;


use tuzhi\base\Event;
use tuzhi\helper\File;
use tuzhi\support\files\Files;
use tuzhi\support\fileStorage\FileSystem;
use tuzhi\support\images\ImagesServices;

/**
 * Class Location
 * @package tuzhi\support\images\services
 */
class Location extends ImagesServices
{

    /**
     * @var null
     */
    protected $fileSystem = null;

    /**
     * @var
     */
    public $savePath = '&web/upload/img/';

    /**
     *
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if( $this->domain == null ){
            $this->domain = \Request::getAbsoluteHost();
        }else{
            if( stripos('http',$this->domain) == false ){
                $this->domain = rtrim( \Request::getAbsoluteHost(),'/' ).'/'.ltrim($this->domain,'/');
            }
        }
        $this->fileSystem = new FileSystem();
        if( $this->savePath ){
            $this->savePath =  \Tuzhi::alias($this->savePath);
        }
        $this->savePath = rtrim($this->savePath,'/');
    }

    /**
     * @param $fileName
     * @return string
     */
    protected function getImage( $fileName )
    {
        $hash = md5($fileName.time());
        $path = substr($hash,0,1).'/'.substr($hash,1,2);
        if( ! is_dir( $this->savePath .'/'.$path ) ){
            File::createDirection($this->savePath .'/'.$path );
        }
        return $path.'/'.strtoupper($path);
    }

    /**
     * @param Files $imageFile
     * @return string
     */
    public function save( Files $imageFile)
    {
        Event::trigger($this,self::EVENT_BEFORE_SAVE,$imageFile);

        $files = $this->getImage($imageFile->getName()).'.'.$imageFile->getSuffix();

        move_uploaded_file($imageFile->getFiles(),$files);

        Event::trigger($this,self::EVENT_AFTER_SAVE,[$files]);

        return $files;
    }

    /**
     * @param $image
     * @param null $width
     * @param null $height
     * @return mixed
     */
    public function thumb( $image, $width = null, $height = null)
    {
        return rtrim(  $this->domain ,'/').'/'. ltrim( $image,'/');
    }

    /**
     * @param $image
     * @return mixed
     */
    public function remove($image)
    {
        $fullImage = $this->savePath.'/'.ltrim($image,'/');
        unset( $fullImage );
        return true;
    }

}